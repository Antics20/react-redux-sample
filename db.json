{
  "articles": [
    {
      "title": "Motivation",
      "description": "As the requirements for JavaScript single-page applications have become increasingly complicated, our code must manage more state than ever before. This state can include server responses and cached data, as well as locally created data that has not yet been persisted to the server. UI state is also increasing in complexity, as we need to manage active routes, selected tabs, spinners, pagination controls, and so on.",
      "likes": 2,
      "id": 1
    },
    {
      "title": "Hallo!1",
      "description": "As the requirements for JavaScript single-page applications have become increasingly complicated, our code must manage more state than ever before. This state can include server responses and cached data, as well as locally created data that has not yet been persisted to the server. UI state is also increasing in complexity, as we need to manage active routes, selected tabs, spinners, pagination controls, and so on.",
      "likes": 7,
      "id": 2
    },
    {
      "title": "Three Principles",
      "description": "1- Single source of truth\n2 -  State is read-only\n3 - Changes are made with pure functions",
      "likes": 1,
      "id": 23
    },
    {
      "title": "Core Concepts",
      "description": "Finally, to tie state and actions together, we write a function called a reducer. Again, nothing magical about it—it’s just a function that takes state and action as arguments, and returns the next state of the app. ",
      "likes": 8,
      "id": 24
    }
  ]
}